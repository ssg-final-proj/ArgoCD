apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: infra
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      serviceAccountName: redis-backup-sa
      containers:
        # Redis 메인 컨테이너
        - name: redis
          image: redis:7.2.4-alpine
          command:
            - redis-server
            - /usr/local/etc/redis/redis.conf
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-storage
              mountPath: /data
            - name: redis-config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
          resources:
            limits:
              memory: "4Gi"
              cpu: "2"
            requests:
              memory: "2Gi"
              cpu: "1"
          livenessProbe:
            exec:
              command: ["redis-cli", "ping"]
            initialDelaySeconds: 20
            periodSeconds: 15
          readinessProbe:
            exec:
              command: ["redis-cli", "ping"]
            initialDelaySeconds: 10
            periodSeconds: 5

        # 백업 사이드카 컨테이너 (Alpine 기반)
        - name: redis-backup-sidecar
          image: redis:7.2.4-alpine  # ✅ Redis CLI 포함
          command:
            - /bin/sh
            - -c
            - |
              apk add --no-cache aws-cli bash
              cp /backup.sh /tmp/backup.sh
              chmod +x /tmp/backup.sh
              while true; do
                /tmp/backup.sh
                sleep 60
              done
          volumeMounts:
            - name: redis-storage
              mountPath: /data
            - name: backup-script
              mountPath: /backup.sh  # ✅ 기본 경로로 마운트
              subPath: backup.sh
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: backup-script
          configMap:
            name: redis-backup-script
  volumeClaimTemplates:
    - metadata:
        name: redis-storage
      spec:
        storageClassName: redis-ebs-sc
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
